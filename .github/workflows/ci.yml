name: ci
on:
  push:
  pull_request:
  schedule:
  - cron:  '0 3 * * 6' # 3am Saturday
  workflow_dispatch:
jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ghc: ['9.10', '9.8', '9.6', '9.4', '9.2', '9.0', '8.10', '8.8']

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - run: git config --global core.autocrlf false
    - uses: actions/checkout@v2
    - uses: haskell-actions/setup@v2.5
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
    - run: cabal v2-freeze --enable-tests
    - uses: actions/cache@v4
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-
    - uses: tomjaguarpaw/neil@tag-ac7e72e
      with:
        github-user: tomjaguarpaw
        branch: tag-e31bd3c
      env:
        POSTGRES_CONNSTRING: "user='postgres' dbname='postgres' password='postgres' host='localhost' port='5432'"
